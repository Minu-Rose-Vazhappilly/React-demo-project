React : is JS Library for building faster UI for web application
latest version:19
2.Fauture of React:
    - Virtual Dom
    - Reusable Components
    - JSX-
3.JSX(Javascript XML) - Is an JS extension for writing HTML codes,used in react to display content in webpage.
    -JSX consist of JSX elements:
        const variable-name = <starting-tag>content</ending-tag>
        Rules of JSX
        -------------
        1.Every JSX element must be inside a single tag it can be /parent/container tag/react fragments(<></>).
        2.Every JSX tag must have a closing tag(<starting-tag>conetnt</ending-tag>/self closing <tag-name/>)
        3.In JSX elements attributes or stye properties / values must be in camel case.(example:fontSize)
        4.In JSX attributes like 'class' must be as "className" and 'for' as "htmlFor"
        5.In JSX,we can directly add js code using curly braces:{js code}

4.create  react app
-----------------
-using vite : npm create vite@latest reactAppName -- --template react
5.React is a collection components,they are arranged in tree like structure.Root node of react app is App Component
6.Components : used to to create UI,it can be an entire webpage or part of webpage ,also component name should be same as filename
    -create a file with file name starts with capital letter
    -ways to create components
             -Functional Based Component/state less component. : Use JS pure function to build component and it must return JSX
            -Class Based Component./state full component.use js class to build component, it must have render method where we can give jsx code.
7.Life Cycle methods of Components: Note:All components may or may not have all life cycle methods.
        - Mounting phase:- Putting JSX into Dom
            - constructor()
            - getDerivedStateFromProps()
            - render()
            - ComponentDidMount()
        - Updating Phase: When component get updated
            - getDerivedStateFromProps()
            - shouldComponentUpdate()
            - render()
            - getSnapshotBeforeUpdate()
            - componetDidUpdate()
        - Unmounting Phase - Removing Component from Dom
            - componentWillUnmount()
            Class Based Component                                        Functional Based Component
            ---------------------------------------------------------------------------------------------
            1.uses js class to build components                      uses js functions to build components
            2. StateFull Component                                   Stateless Component
            3.Uses constructor for initialising values              no need of constructor to initialise values
            4.Life Cycle methods are available 
8.Styling Rect Components
---------------------------
-Using inline Css:using style attribute
    -syntax: style={{property:value,...}}
-External Css : Using External css file
-Using Css Module file:using .module.css extension file to define style as class selector.
9.event handling in react
    -binding function without argument :use function-name only to call the function.
    -binding function with argument : call function use ()=>function-name(arg)
    -binding function with argument as event : call function use (event)=>function-name(event)
10.How can we share data between components:
    React props : Usd to share datas from parent component to its child, In react only parent can share data to is child. 
    - Props is properties of a component, props is an object so data is stored as key and value pairs.
 parent to child   -parent can share its data to the child tag using its attributes.
                    you can give any name to attribute.
  access from parent  -using props as child component function argument,using props we can access data in child.
11.conditional rendering : based on condition we can control visibility of  jsx element based on condition.
    we can use
        - ternary operator
        - truthy operator
12.List in React:To display list in jsx use map array method.Use key props to all duplicating jsx items in list,key must be unique and used to identify by react dom.

13.React State  : used to store values in a Component,whenever state changes component also get re render.
    to create state.
    By default class can make state but functions can't.
    to update state value: setState()
14.React Hooks: are predefined function for enabling react component features in functional components.
        all hooks name start with "use" keyword
        -How to use Hooks in functional Component
        --------------------------------------------
            - import hook in component.
            - to use the hook - call the hook at top level of component
        -Hooks can be 2 types.
            -predefined hooks
            -customised hooks - create a js file with name starts with "use" inside the file desfine js function.
        -Common Hooks
           1] useState : used to create stae in functional component
            useState(initialValue) (Atleast one value should pass with useState that should be initial Value)
        there should be return statement.it returns a stateful value  and a function to update it.
         const [stateValue,stateUpdationFunctionName] = useState(initialValue)
          2]useEffect(effect,dependency);effect should be always a function => its better to give arrow function.
          - dependancy : can be 3 ways
           - no dependency : affect will be apply each time in component
           - empty array : effect will apply only at the creation of component 
           - [variable-name,...]:effect will apply not only at the creation of component but also whenver variable changes in component
        3]useRef : used to store mutable data without re rendering the component,it also helps to get the refernce of a html element into component
                -useRef(initialValue)
                returns a object called current.
           Handling Form in React: React handle input data differently
           ->controlled components,uncontrolled components
            ->controlled component:here input data will store inside the component state,so component has more control over the form data.
            ->uncontrolled components:here component can get the reference of input tag to get the input tag,here component doesnot has more control over the form data.
15.Set up Route to a Component.
    - Route :- path(url) to a component
    - Install react-route-dom Library
            -npm i react-router-dom
    -Set up path for component using react-router-dom
        1.Entire react app must be render inside the 'BrowserRouter'.[In main.jsx]
        2.Place all components needs 

    
