React : is JS Library for building faster UI for web application
React is a JavaScript library (not a full framework) developed by Facebook (Meta) in 2013, used for building user interfaces (UIs), especially single-page applications (SPAs).

What is a Single Page Application (SPA)?

In a traditional website, every time you click a link, the browser requests a new page from the server.

In a SPA, the browser loads one HTML page initially and dynamically updates parts of the page using JavaScript (without full reload).

ðŸ“Œ Example:

Gmail is a SPA â†’ When you click "Inbox", "Sent", or "Drafts", the page doesnâ€™t reload; only the content changes.

ðŸ‘‰ This makes apps faster, smoother, and user-friendly.

Note:->Babel is a JavaScript compiler.

React uses JSX, which browsers cannot understand directly.

Babel converts JSX (and newer JS features like ES6+) into plain JavaScript that browsers can execute.


latest version:19
2.Fauture of React:
    - Virtual Dom
    ---------------
    Virtual DOM (VDOM)

    Instead of directly updating the real DOM (which is slow), React maintains a lightweight copy called the Virtual DOM.

    React compares the current VDOM vs. previous VDOM (this is called diffing) and updates only the parts that changed (this is called reconciliation).

    Result: Fast rendering.
    - Reusable Components (Component-Based Architecture)
    - JSX-
3.JSX(Javascript XML) - Is an JS extension for writing HTML codes,used in react to display content in webpage.
    -JSX consist of JSX elements:
        const variable-name = <starting-tag>content</ending-tag>
        Rules of JSX
        -------------
        1.Every JSX element must be inside a single tag it can be /parent/container tag/react fragments(<></>).
        2.Every JSX tag must have a closing tag(<starting-tag>conetnt</ending-tag>/self closing <tag-name/>)
        3.In JSX elements attributes or stye properties / values must be in camel case.(example:fontSize)
        4.In JSX attributes like 'class' must be as "className" and 'for' as "htmlFor"
        5.In JSX,we can directly add js code using curly braces:{js code}

4.create  react app
-----------------
-using vite : npm create vite@latest reactAppName -- --template react
5.React is a collection components,they are arranged in tree like structure.Root node of react app is App Component
6.Components : used to to create UI,it can be an entire webpage or part of webpage ,also component name should be same as filename
    -create a file with file name starts with capital letter
    -ways to create components
             -Functional Based Component/state less component. : Use JS pure function to build component and it must return JSX
            -Class Based Component./state full component.use js class to build component, it must have render method where we can give jsx code.
7.Life Cycle methods of Components: Note:All components may or may not have all life cycle methods.
A componentâ€™s lifecycle = the stages it goes through from creation â†’ updating â†’ removal.

Class components have built-in lifecycle methods.

Functional components donâ€™t have lifecycle methods but use Hooks (useEffect) to achieve the same behavior.


        - Mounting Phase (when a component is first created and inserted into the DOM)

            constructor() â†’ Initialize state & bind methods.

            static getDerivedStateFromProps(props, state) â†’ Sync state with props if needed.

            render() â†’ Return JSX (virtual DOM is created).

            componentDidMount() â†’ Runs once after component is in the DOM (good for API calls, subscriptions, timers).

        - Updating Phase (when props/state change) -When the component is updated (due to setState or new props):

            static getDerivedStateFromProps(props, state) â†’ Runs first to update state from new props.

            shouldComponentUpdate(nextProps, nextState) â†’ Decide whether to re-render or not (true/false).

            render() â†’ Returns new JSX (virtual DOM updated).

            getSnapshotBeforeUpdate(prevProps, prevState) â†’ Capture DOM info (like scroll position) before changes.

            componentDidUpdate(prevProps, prevState, snapshot) â†’ Runs after DOM updates. (Good for making network requests after change).

        - Unmounting Phase (when component is removed from DOM)

            componentWillUnmount() â†’ Cleanup (remove timers, listeners, cancel requests).
            Class Based Component                                        Functional Based Component
            ---------------------------------------------------------------------------------------------
            1.uses js class to build components                      uses js functions to build components
            2. StateFull Component                                   Stateless Component
            3.Uses constructor for initialising values              no need of constructor to initialise values
            4.Life Cycle methods are available 
8.Styling Rect Components
---------------------------
-Using inline Css:using style attribute
    -syntax: style={{property:value,...}}
-External Css : Using External css file
-Using Css Module file:using .module.css extension file to define style as class selector.
9.event handling in react
    -binding function without argument :use function-name only to call the function.
    -binding function with argument : call function use ()=>function-name(arg)
    -binding function with argument as event : call function use (event)=>function-name(event)
10.How can we share data between components:
    React props : Usd to share datas from parent component to its child, In react only parent can share data to is child. 
    - Props is properties of a component, props is an object so data is stored as key and value pairs.
 parent to child   -parent can share its data to the child tag using its attributes.
                    you can give any name to attribute.
  access from parent  -using props as child component function argument,using props we can access data in child.
11.conditional rendering : based on condition we can control visibility of  jsx element based on condition.
    we can use
        - ternary operator
        - truthy operator
12.List in React:To display list in jsx use map array method.Use key props to all duplicating jsx items in list,key must be unique and used to identify by react dom.

13.React State  : used to store values in a Component,whenever state changes component also get re render.
    to create state.
    By default class can make state but functions can't.
    to update state value: setState()
14.React Hooks: are predefined function for enabling react component features in functional components.
        all hooks name start with "use" keyword
        -How to use Hooks in functional Component
        --------------------------------------------
            - import hook in component.
            - to use the hook - call the hook at top level of component
        -Hooks can be 2 types.
            -predefined hooks
            -customised hooks - create a js file with name starts with "use" inside the file desfine js function.
        -Common Hooks
           1] useState : used to create stae in functional component
            useState(initialValue) (Atleast one value should pass with useState that should be initial Value)
        there should be return statement.it returns a stateful value  and a function to update it.
         const [stateValue,stateUpdationFunctionName] = useState(initialValue)
          2]useEffect(effect,dependency);effect should be always a function => its better to give arrow function.
          - dependancy : can be 3 ways
           - no dependency : affect will be apply each time in component
           - empty array : effect will apply only at the creation of component 
useDispatch()
useSelector()
useParams():Used to get dynamic values in url,it is an always a object 
           - [variable-name,...]:effect will apply not only at the creation of component but also whenver variable changes in component
        3]useRef : used to store mutable data without re rendering the component,it also helps to get the refernce of a html element into component
                -useRef(initialValue)
                returns a object called current.
           Handling Form in React: React handle input data differently
           ->controlled components,uncontrolled components
            ->controlled component:here input data will store inside the component state,so component has more control over the form data.
            ->uncontrolled components:here component can get the reference of input tag to get the input tag,here component doesnot has more control over the form data.
15.Set up Route to a Component.
    - Route :- path(url) to a component
    - Install react-route-dom Library
            -npm i react-router-dom
    -Set up path for component using react-router-dom
        1.Entire react app must be render inside the 'BrowserRouter'.[In main.jsx]
        2.Place all components needs 
16.API Handling in React:
    -  fetch method
    - Axios Library : Promise based HTTP request handling 
        install Axios - npm i axios
        -Axios Instance is used to make api call
                - Using : axios(requestConfiguration)
                    -requestConfig : is object with predefined keys (method,url,data,headers...)
                
            Axios methods (GET,PUT,POST,DELETE)
        
 How data can be shared between components(through props)
State Lifting 
    To share data from one component to another by lifting the data to their common parent and parent can share the lifted state/data using props with its children
Props Drilling 
To avoid Props Drilling - Redux can be used
Redux
-------
there will be common data store where all components can be accesssed.

Dynamic Routing:to set up path followed with column is used to store dynamic values in a url.

JSON SERVER - REST API creation
--------------------------------
1.Create a folder for json SERVER.
2.Create json file to store data
3.Install json-server : npm i json-server
4.To run json file(available in localhost:3000) : npx json-server json-file-name

DEPLOYING JSON SERVER Using NODE(refer to commands.txt)
-----------------------
1.Install stable version of json-server : npm i json-server@0.17.0
2.create  a .gitignore file in server folder(add node_modules)
3.Create index.js file
4.Inside idex.js file
        - import json-server
        - create server using Library json-server using create method
        - import json file
        - create middleware:using default()
        - define port number to run the app in localhost
        - use middleware in server
        - define routes for client request (api endpoints for server)
        - run server for client request using listen method.
    
REDUX : STATE MANAGEMENT TOOL
-------------------------------
1.a js library for predictable and maintable global state managemnt and used in react to avoid props drilling.
2.REDUX consist of 2 libraries
    - REDUX TOOLKIT:The official ,opinionated,batteries-included toolset for efficient redux developement,npm install @reduxjs/toolkit react-redux
            - Create common storage : configureStore() and store immutable (objects/array) data in storage
            - Actions: used to update data from component and they are similar to function, to execute action it should be dispatched from component.Action aoutput automatically return to reducers in redux.,use createAction() or 
            - Reducers:used to upadte data in storage.
            -Slice:used to combine both action & reducer,usecreateSlice(),use createSlice(),extraReducer is used to handling...fill here
    -REACT REDUX:Official React Bindings for redux
            -store property of provider component from react-redux:used to provide redux store
            -Hooks:
                -useDispatch(action-name()):hook used to dispatch action from component.
                -useSelector() : hook used to select data from store.return state from store corresponding to reducer name.

                imutable state are used to store in datastore.
                immutable - array,object.

Component â†’ dispatch(action) â†’ Reducer updates state â†’ Store â†’ useSelector reads state â†’ Component re-renders
 


STEP1: Create Store
STEP2: Provide it to APP in Main.jsx
STEP3: Slice


to resolve asynchronous function - promise is used


Software Development Life Cycle
-------------------------------
planning
defining
desigining
Building
Testing
Deploy
Maintanenace


How React Works (Internal Flow)

Hereâ€™s the simplified internal working of React:

Initial Render

React takes your JSX code â†’ compiles it into JavaScript (via Babel) â†’ creates a Virtual DOM tree.

It renders this to the real DOM for the first time.

State or Props Change

If user input or data changes, React updates the componentâ€™s state/props.

Reconciliation

React creates a new Virtual DOM.

Compares it with the old Virtual DOM using the diffing algorithm.

Only updates the changed elements in the real DOM.

Efficient Update

Instead of reloading the whole page, React refreshes only the necessary part of the UI.

Example: If you type in a search bar, only the search text updates, not the whole page.



What is Diffing?

Diffing is Reactâ€™s algorithm to find what changed between the old Virtual DOM and the new Virtual DOM.

Instead of replacing the entire DOM, React checks node by node.

ðŸ“Œ Example:
Old VDOM: <h1>Hello</h1>
New VDOM: <h1>Hi</h1>

React sees only the text inside <h1> changed, so it updates just that â€” not the whole DOM.

ðŸ‘‰ Diffing makes React fast and efficient.

ðŸŒ¿ 4. What is Reconciliation?

After diffing, React applies the necessary changes to the real DOM.

This process of syncing Virtual DOM with the real DOM = Reconciliation.

ðŸ“Œ Think of it like this:

Diffing = spotting the differences.

Reconciliation = fixing the real DOM based on differences.



MONGODB -DATABASE
---------------------
1.Database : database is a oraganised collection of data to be stored permanently.
2.MONGODB is document databse.
3.it stores data in a type of JSON format called BSON 
4.Values may include numbers,strings,booleans,arrays or even nested documents.
